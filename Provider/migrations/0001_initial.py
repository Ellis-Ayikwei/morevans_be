# Generated by Django 5.1.5 on 2025-03-16 20:13

import django.contrib.gis.db.models.fields
import django.db.models.deletion
import encrypted_fields.fields
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('Services', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Certification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('required_for_categories', models.JSONField(default=list)),
            ],
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(max_length=50)),
                ('file', models.FileField(upload_to='provider_documents/')),
                ('issue_date', models.DateField()),
                ('expiry_date', models.DateField(null=True)),
                ('verified', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='ProviderVehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vehicle_type', models.CharField(choices=[('van', 'Van'), ('truck', 'Truck'), ('cargo bike', 'Cargo Bike'), ('special', 'Specialized Vehicle'), ('heavy', 'Heavy Haulage'), ('urban', 'Urban Delivery'), ('cold', 'Cold Chain')], max_length=20)),
                ('vehicle_registration', models.CharField(max_length=20)),
                ('description', models.TextField()),
                ('vehicle_make_model', models.CharField(max_length=100)),
                ('vehicle_year', models.PositiveIntegerField()),
                ('max_load_capacity', models.DecimalField(decimal_places=2, max_digits=8)),
                ('pallet_capacity', models.PositiveIntegerField(null=True)),
                ('fuel_type', models.CharField(choices=[('diesel', 'Diesel'), ('gas', 'Gas'), ('electric', 'Electric'), ('hybrid', 'Hybrid'), ('lpg', 'LPG'), ('cng', 'CNG')], default='diesel', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='ServiceArea',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('postcodes', models.JSONField()),
                ('price_multiplier', models.DecimalField(decimal_places=2, default=1.0, max_digits=4)),
                ('is_active', models.BooleanField(default=True)),
                ('special_requirements', models.TextField(blank=True)),
                ('restricted_hours', models.JSONField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ServiceProvider',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('business_type', models.CharField(choices=[('limited', 'Limited Company'), ('sole_trader', 'Sole Trader'), ('partnership', 'Partnership')], max_length=20)),
                ('company_name', models.CharField(max_length=200)),
                ('company_reg_number', models.CharField(blank=True, max_length=50)),
                ('vat_registered', models.BooleanField(default=False)),
                ('vat_number', models.CharField(blank=True, max_length=20)),
                ('description', models.TextField(blank=True, max_length=2000)),
                ('service_image', models.ImageField(blank=True, null=True, upload_to='service_images/')),
                ('service_location', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('hourly_rate', models.DecimalField(decimal_places=2, max_digits=8, null=True)),
                ('accepts_instant_bookings', models.BooleanField(default=True)),
                ('service_areas', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326)),
                ('service_radius', models.PositiveIntegerField(help_text='Max service radius in km')),
                ('postcode_blacklist', models.JSONField(blank=True, default=list)),
                ('goods_in_transit_insurance', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('cmr_insurance', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('trade_associations', models.JSONField(default=list)),
                ('bank_account', encrypted_fields.fields.EncryptedJSONField(null=True)),
                ('payment_methods', models.JSONField(default=list)),
                ('stripe_connect_id', models.CharField(blank=True, max_length=100)),
                ('tax_identification_number', encrypted_fields.fields.EncryptedCharField(blank=True, max_length=50)),
                ('availability_schedule', models.JSONField(default=dict)),
                ('preferred_working_hours', models.JSONField(default=dict)),
                ('minimum_job_value', models.DecimalField(decimal_places=2, max_digits=8, null=True)),
                ('maximum_job_distance', models.PositiveIntegerField(null=True)),
                ('provider_rating', models.DecimalField(decimal_places=2, default=5.0, max_digits=3)),
                ('success_rate', models.DecimalField(decimal_places=2, default=100.0, max_digits=5)),
                ('total_completed', models.PositiveIntegerField(default=0)),
                ('total_earnings', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('background_check_status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('documents_verified', models.BooleanField(default=False)),
                ('verification_status', models.CharField(choices=[('unverified', 'Unverified'), ('verified', 'Verified'), ('premium', 'Premium Verified')], default='unverified', max_length=20)),
                ('notification_preferences', models.JSONField(default=dict)),
                ('marketing_opt_in', models.BooleanField(default=True)),
                ('allow_customer_invites', models.BooleanField(default=True)),
                ('Vehicle', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Provider.providervehicle')),
                ('certifications', models.ManyToManyField(blank=True, to='Provider.certification')),
                ('insurance_documents', models.ManyToManyField(related_name='insurance_providers', to='Provider.document')),
                ('service_categories', models.ManyToManyField(related_name='providers', to='Services.servicecategory', verbose_name='Service Categories')),
                ('specialization_categories', models.ManyToManyField(blank=True, help_text='Select categories that you specialize in', limit_choices_to={'is_specialization': True}, related_name='specializing_providers', to='Services.servicecategory', verbose_name='Specializations')),
            ],
            options={
                'verbose_name': 'Service Provider',
                'verbose_name_plural': 'Service Providers',
                'ordering': ['-created_at'],
            },
        ),
    ]
